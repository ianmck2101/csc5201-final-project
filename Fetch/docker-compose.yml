services:
  fetch-api:
    build:
      context: .
      dockerfile: Fetch.Api/Dockerfile
    ports:
      - "8080:80"
    networks:
      fetch-network:
        aliases:
          - fetch-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - POSTGRES_HOST=database
      - POSTGRES_DB=fetchdb
      - POSTGRES_USER=fetchuser
      - POSTGRES_PASSWORD=fetchpassword
      - ASPNETCORE_URLS=http://*:80/;
    depends_on:
      - database
      - kafka

  database:
    image: postgres:15
    container_name: postgres
    networks:
      fetch-network:
        aliases:
          - database
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: fetchdb
      POSTGRES_USER: fetchuser
      POSTGRES_PASSWORD: fetchpassword

  kafka:
    image: wurstmeister/kafka
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=1
    ports:
      - "9092:9092"
    networks:
      fetch-network:
        aliases:
          - kafka
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      fetch-network:
        aliases:
          - zookeeper

  request-consumer:
    build:
      context: .
      dockerfile: Fetch.Consumer/Dockerfile
    depends_on:
      - kafka
      - fetch-api
    networks:
      fetch-network:
        aliases:
          - request-consumer
    command: ["dotnet", "Fetch.Consumer.dll"]

networks:
  fetch-network:
    driver: bridge
